-- Script to import csv data into MySQL database
-- DO NOT RENAME FILE TO END WITH .sql
--    mysql docker initialization will run all .sql files
--    this script is envoked by 100_import_data.sh if the "MYSQL_FILL_EXAMPLE_DATA" environment variable is set to "true" on initialization

USE `Grocery-Aid-Database`;

SET GLOBAL local_infile=1;

LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/GenericAccounts.csv' INTO TABLE Accounts FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (last_name, first_name, email_addr, save_history, password_hash);
LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/SearchHistories.csv' INTO TABLE SearchHistory FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (user_id, search_string);

INSERT INTO Stores(store_name) VALUES ('Amazon'); 
LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/Amazon_Cleaned.csv' INTO TABLE Products FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (name, price) SET store_id = (SELECT LAST_INSERT_ID());

INSERT INTO Stores(store_name) VALUES ('Costco');
LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/Costco_Cleaned.csv' INTO TABLE Products FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (name, price) SET store_id = (SELECT LAST_INSERT_ID());

INSERT INTO Stores(store_name) VALUES ('Walmart');
LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/Walmart_Cleaned.csv' INTO TABLE Products FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (name, price) SET store_id = (SELECT LAST_INSERT_ID());

INSERT INTO Stores(store_name) VALUES ('Whole Foods');
LOAD DATA LOCAL INFILE '/docker-entrypoint-initdb.d/WholeFood_Cleaned.csv' INTO TABLE Products FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 LINES (name, price) SET store_id = (SELECT LAST_INSERT_ID());

INSERT INTO FoodGroup(product_id, grains, spices, condiments,  meats, fruits, vegetables, dairy, other) SELECT product_id, 0, 0, 0, 0, 0, 0, 0, 1 FROM Products;
